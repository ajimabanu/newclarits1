[{"D:\\newclarits1\\src\\index.js":"1","D:\\newclarits1\\src\\App.js":"2","D:\\newclarits1\\src\\components\\Codenotes.js":"3","D:\\newclarits1\\src\\components\\Header.js":"4","D:\\newclarits1\\src\\components\\Acc.js":"5","D:\\newclarits1\\src\\components\\ZeroWidthStack.js":"6","D:\\newclarits1\\src\\components\\Main.js":"7","D:\\newclarits1\\src\\components\\Search.js":"8","D:\\newclarits1\\src\\components\\Year.js":"9","D:\\newclarits1\\src\\components\\Codedet.js":"10","D:\\newclarits1\\src\\components\\Sectionnotes.js":"11","D:\\newclarits1\\src\\components\\Chapternotes.js":"12","D:\\newclarits1\\src\\components\\Table2.js":"13","D:\\newclarits1\\src\\components\\Tabeffect.js":"14"},{"size":269,"mtime":1688966578292,"results":"15","hashOfConfig":"16"},{"size":523,"mtime":1688966578286,"results":"17","hashOfConfig":"16"},{"size":1173,"mtime":1689052215043,"results":"18","hashOfConfig":"16"},{"size":917,"mtime":1689244914900,"results":"19","hashOfConfig":"16"},{"size":1747,"mtime":1688966578287,"results":"20","hashOfConfig":"16"},{"size":1542,"mtime":1688966578291,"results":"21","hashOfConfig":"16"},{"size":3499,"mtime":1689231886927,"results":"22","hashOfConfig":"16"},{"size":3951,"mtime":1689061187472,"results":"23","hashOfConfig":"16"},{"size":1867,"mtime":1689244959416,"results":"24","hashOfConfig":"16"},{"size":4032,"mtime":1689052192248,"results":"25","hashOfConfig":"16"},{"size":1799,"mtime":1689052231739,"results":"26","hashOfConfig":"16"},{"size":2500,"mtime":1689310488576,"results":"27","hashOfConfig":"16"},{"size":415,"mtime":1688966578290,"results":"28","hashOfConfig":"16"},{"size":1734,"mtime":1689228841873,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1yfzb1f",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"33"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"33"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"33"},"D:\\newclarits1\\src\\index.js",[],[],[],"D:\\newclarits1\\src\\App.js",["79","80","81","82"],[],"import { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport Acc from \"./components/Acc\";\r\nimport { Header } from \"./components/Header\";\r\nimport { Main } from \"./components/Main\";\r\n\r\nimport { ZeroWidthStack } from \"./components/ZeroWidthStack\";\r\nimport Codenotes from \"./components/Codenotes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Header />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\newclarits1\\src\\components\\Codenotes.js",["83"],[],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst Codenotes = () => {\r\n  const [results, setResults] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchBooks = async () => {\r\n      try {\r\n        if (global.values && global.values.code) {\r\n          const response = await fetch(`/codes/${global.values.code}/details/?version=${global.years}`);\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setResults(data);\r\n          } else {\r\n            console.error(\"Failed to fetch data\");\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    };\r\n    fetchBooks();\r\n  }, [global.values]);\r\n\r\n  console.log(\"our result is\", results);\r\n  \r\n  return (\r\n    <div className=\"codenotes\">\r\n      <div>\r\n        <table>\r\n          <thead>\r\n            <tr></tr>\r\n          </thead>\r\n          <tbody>\r\n            {results && results.code && (\r\n              <tr key={results.code}>\r\n                <td>{results.longDescription}</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Codenotes;\r\n","D:\\newclarits1\\src\\components\\Header.js",["84"],[],"D:\\newclarits1\\src\\components\\Acc.js",[],[],"D:\\newclarits1\\src\\components\\ZeroWidthStack.js",[],[],"D:\\newclarits1\\src\\components\\Main.js",["85","86","87","88","89","90","91"],[],"import { Box, Container, Stack, Typography, Tab, Tabs } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport Codedet from \"./Codedet\";\r\nimport PropTypes from \"prop-types\";\r\nimport Codenotes from \"./Codenotes\";\r\nimport Sectionnotes from \"./Sectionnotes\";\r\nimport Chapternotes from \"./Chapternotes\";\r\nimport \"../App.css\";\r\nimport \"../styles/Main.css\";\r\nimport Tabeffect from \"./Tabeffect\";\r\n\r\n\r\n\r\nexport const Main = ({ isValueSelected }) => {\r\n  \r\n  return (\r\n    <div>\r\n      <Container maxWidth=\"4px\">\r\n        <Stack direction={\"row\"} gap={\"10px\"} mt={-2.5}>\r\n          <Box\r\n            classname=\"indexpage\"\r\n            sx={{\r\n              height: \"590px\",\r\n              width: \"50%\",\r\n              display: \"flex\",\r\n              border: \"0.5px solid grey\",\r\n            }}\r\n          >\r\n            <Box\r\n              className=\"wrapper\"\r\n              sx={{\r\n                height: \"20px\",\r\n                width: \"100%\",\r\n                textAlign: \"left\",\r\n                mt: \"8px\",\r\n              }}\r\n            >\r\n              <Typography\r\n                classname=\"indexSearch\"\r\n                sx={{\r\n                  backgroundColor: \"#c8e2dd\",\r\n                  color: \"#4185d2\",\r\n                  mt: \"-8px\",\r\n                }}\r\n                variant=\"subtitle1\"\r\n                fontFamily={\"sans-serif\"}\r\n                noWrap\r\n                width=\"610px\"\r\n              >\r\n                Index Search\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box\r\n            classname=\"Tabularsearch\"\r\n            sx={{\r\n              height: \"590px\",\r\n              width: \"60%\",\r\n              display: \"flex\",\r\n              backgroundColor: \"white\",\r\n              border: \"0.5px solid grey\",\r\n            }}\r\n          >\r\n            <Box\r\n              className=\"wrapper\"\r\n              sx={{\r\n                height: \"20px\",\r\n                width: \"50%\",\r\n                mt: \"10px\",\r\n              }}\r\n            >\r\n              <Typography\r\n                className=\"tabularsearch\"\r\n                variant=\"subtitle1\"\r\n                fontFamily={\"sans-serif\"}\r\n                noWrap\r\n                width=\"930px\"\r\n                sx={{\r\n                  backgroundColor: \"#c8e2dd\",\r\n                  color: \"#4185d2\",\r\n                  mt: \"-10px\",\r\n                }}\r\n              >\r\n                Tabular Search\r\n              </Typography>\r\n            </Box>\r\n            <Stack direction={\"column\"} ml={-30} mt={10}>\r\n               <Typography\r\n                className=\"codedetails\"\r\n                variant=\"subtitle1\"\r\n                fontFamily={\"sans-serif\"}\r\n                color={\" #4185d2\"}\r\n                fontWeight={600}\r\n                ml={-28}\r\n                sx={{\r\n                  borderBottom: \"0.3px solid grey\",\r\n                  width: \"132%\",\r\n                }}\r\n              >\r\n                Code details\r\n              </Typography>\r\n              <Box sx={{ marginRight: \"20px\" }}>\r\n                {isValueSelected && <Codedet />}\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  height: \"500px\",\r\n                  width: \"930px\",\r\n                  ml: \"-200px\",\r\n                  overflowY: \"scroll\",\r\n                  mt: \"10px\"\r\n                }}\r\n              >  <Tabeffect/>    \r\n              </Box>\r\n            </Stack>\r\n          </Box>\r\n        </Stack>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","D:\\newclarits1\\src\\components\\Search.js",[],[],"D:\\newclarits1\\src\\components\\Year.js",["92","93"],[],"D:\\newclarits1\\src\\components\\Codedet.js",["94"],[],"import { Close } from \"@mui/icons-material\";\r\nimport { Button } from \"@mui/material\";\r\nimport \"../App.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Codedet = () => {\r\n  const [result, setResult] = useState(\"\");\r\n  const [isClosed, setIsClosed] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchBooks = async () => {\r\n      try {\r\n        if (global.values && global.values.code) {\r\n          const response = await fetch(`/codes/${global.values.code}/details/?version=${global.years}`);\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setResult(data);\r\n          } else {\r\n            console.error(\"Failed to fetch data\");\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    };\r\n    fetchBooks();\r\n  }, [global.values]);\r\n\r\n  const handleClose = () => {\r\n    setIsClosed(true);\r\n    window.location.reload();\r\n  };\r\n\r\n  console.log(\"our result is\", result);\r\n  return (\r\n    <div className=\"division\">\r\n      {!isClosed && global.values && global.values.code && (\r\n        <div>\r\n          <div>\r\n            <Button\r\n              disableFocusRipple\r\n              disableRipple\r\n              sx={{\r\n                border: \"0.5px solid green\",\r\n                textAlign: \"center\",\r\n                height: \"20px\",\r\n                width: \"80px\",\r\n                backgroundColor: \"#ADD8E6\",\r\n                marginLeft: \"125px\",\r\n              }}\r\n            >\r\n              {global.values.code}\r\n              <Close\r\n                sx={{\r\n                  width: \"20px\",\r\n                  ml: \"5px\",\r\n                  color: \"#4169E1\",\r\n                }}\r\n                onClick={handleClose}\r\n              />\r\n            </Button>\r\n          </div>\r\n          <table>\r\n            <thead>\r\n              <tr></tr>\r\n            </thead>\r\n            <tbody>\r\n              {result && (\r\n                <tr key={result.code}>\r\n                  <td>{result.code}</td>\r\n                  <td>{result.longDescription}</td>\r\n                  <td>\r\n                    {result.billable === true ? (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        sx={{\r\n                          width: \"150px\",\r\n                          height: \"15px\",\r\n                          color: \"white\",\r\n                          fontFamily: \"sans-serif\",\r\n                          ml: \"20px\",\r\n                          backgroundColor: \"green\",\r\n                          textTransform: \"lowercase\",\r\n                          fontWeight: \"700px\",\r\n                          textAlign: \"center\",\r\n                          \"&:hover\": {\r\n                            backgroundColor: \"green\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        Billable Codes\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        disableElevation\r\n                        disableFocusRipple\r\n                        sx={{\r\n                          width: \"150px\",\r\n                          height: \"15px\",\r\n                          color: \"white\",\r\n                          fontFamily: \"sans-serif\",\r\n                          ml: \"170px\",\r\n                          backgroundColor: \"orange\",\r\n                          textTransform: \"lowercase\",\r\n                          fontWeight: \"700px\",\r\n                          textAlign: \"center\",\r\n                          \"&:hover\": {\r\n                            backgroundColor: \"orange\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        NonBillable Codes\r\n                      </Button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Codedet;\r\n","D:\\newclarits1\\src\\components\\Sectionnotes.js",["95"],[],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst Sectionnotes = () => {\r\n  const [results, setResults] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchBooks = async () => {\r\n      try {\r\n        if (global.values && global.values.code) {\r\n          const response = await fetch(`/codes/${global.values.code}/details/?version=${global.years}`);\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setResults(data);\r\n          } else {\r\n            console.error(\"Failed to fetch data\");\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    };\r\n    fetchBooks();\r\n  }, [global.values]);\r\n\r\n  console.log(\"our result is\", results);\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <div>\r\n        <table>\r\n          <thead>\r\n            <tr></tr>\r\n          </thead>\r\n          <tbody>\r\n            {results && results.section ? (\r\n              <tr key={results.code}>\r\n                <td>{results.section.code}</td>\r\n                <td>{results.section.icdReference}</td>\r\n              </tr>\r\n            ) : (\r\n              <tr>\r\n                <td colSpan={2}></td>\r\n              </tr>\r\n            )}\r\n            {results &&\r\n              results.section &&\r\n              results.section.notes &&\r\n              results.section.notes.length > 0 ? (\r\n              results.section.notes.map((note, index) => (\r\n                <tr key={index}>\r\n                  <td>{note.classifications}</td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan={2}>No notes available.</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sectionnotes;\r\n","D:\\newclarits1\\src\\components\\Chapternotes.js",["96"],[],"D:\\newclarits1\\src\\components\\Table2.js",["97"],[],"D:\\newclarits1\\src\\components\\Tabeffect.js",["98","99","100","101"],[],"import React from 'react'\r\nimport  { useState } from 'react';\r\nimport Codenotes from './Codenotes';\r\nimport Sectionnotes from './Sectionnotes';\r\nimport Chapternotes from './Chapternotes';\r\nimport\"../styles/Tabeffect.css\"\r\n\r\nconst Tabeffect = () => {\r\n const [activeSlide, setActiveSlide] = useState(null);\r\n\r\n  // Function to handle slide click\r\n  const handleSlideClick = (slideIndex) => {\r\n    setActiveSlide(slideIndex);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n    \r\n      <div className=\"slides\">\r\n        <div\r\n          className={`slide ${activeSlide === 0 ? 'active' : ''}`}\r\n          onClick={() => handleSlideClick(0)}\r\n        >\r\n          <a href=\"#\">Code notes</a>\r\n          <div className=\"content\">\r\n          <Codenotes/>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={`slide ${activeSlide === 1 ? 'active' : ''}`}\r\n          onClick={() => handleSlideClick(1)}\r\n        >\r\n          <a href=\"#\">section notes</a>\r\n          <div className=\"content\">\r\n           <Sectionnotes/>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={`slide ${activeSlide === 2 ? 'active' : ''}`}\r\n          onClick={() => handleSlideClick(2)}\r\n        >\r\n          <a href=\"#\">chapter notes</a>\r\n          <div className=\"content\">\r\n           <Chapternotes/>\r\n          </div>\r\n              </div>\r\n         <div\r\n          className={`slide ${activeSlide === 3 ? 'active' : ''}`}\r\n          onClick={() => handleSlideClick(3)}\r\n        >\r\n          <a href=\"#\">chapter Guidelines</a>\r\n          <div className=\"content\">\r\n      No guidelines avilable.\r\n          </div>\r\n              </div>\r\n              \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tabeffect;\r\n",{"ruleId":"102","severity":1,"message":"103","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":11},{"ruleId":"102","severity":1,"message":"106","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":14},{"ruleId":"102","severity":1,"message":"107","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":24},{"ruleId":"102","severity":1,"message":"108","line":7,"column":8,"nodeType":"104","messageId":"105","endLine":7,"endColumn":17},{"ruleId":"109","severity":1,"message":"110","line":23,"column":6,"nodeType":"111","endLine":23,"endColumn":21,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":24,"column":13,"nodeType":"115","endLine":27,"endColumn":14},{"ruleId":"102","severity":1,"message":"116","line":1,"column":45,"nodeType":"104","messageId":"105","endLine":1,"endColumn":48},{"ruleId":"102","severity":1,"message":"117","line":1,"column":50,"nodeType":"104","messageId":"105","endLine":1,"endColumn":54},{"ruleId":"102","severity":1,"message":"118","line":2,"column":17,"nodeType":"104","messageId":"105","endLine":2,"endColumn":25},{"ruleId":"102","severity":1,"message":"119","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":17},{"ruleId":"102","severity":1,"message":"108","line":6,"column":8,"nodeType":"104","messageId":"105","endLine":6,"endColumn":17},{"ruleId":"102","severity":1,"message":"120","line":7,"column":8,"nodeType":"104","messageId":"105","endLine":7,"endColumn":20},{"ruleId":"102","severity":1,"message":"121","line":8,"column":8,"nodeType":"104","messageId":"105","endLine":8,"endColumn":20},{"ruleId":"102","severity":1,"message":"122","line":7,"column":10,"nodeType":"104","messageId":"105","endLine":7,"endColumn":15},{"ruleId":"102","severity":1,"message":"123","line":7,"column":17,"nodeType":"104","messageId":"105","endLine":7,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":27,"column":6,"nodeType":"111","endLine":27,"endColumn":21,"suggestions":"124"},{"ruleId":"109","severity":1,"message":"110","line":23,"column":6,"nodeType":"111","endLine":23,"endColumn":21,"suggestions":"125"},{"ruleId":"109","severity":1,"message":"126","line":22,"column":6,"nodeType":"111","endLine":22,"endColumn":27,"suggestions":"127"},{"ruleId":"102","severity":1,"message":"128","line":1,"column":10,"nodeType":"104","messageId":"105","endLine":1,"endColumn":20},{"ruleId":"129","severity":1,"message":"130","line":24,"column":11,"nodeType":"115","endLine":24,"endColumn":23},{"ruleId":"129","severity":1,"message":"130","line":34,"column":11,"nodeType":"115","endLine":34,"endColumn":23},{"ruleId":"129","severity":1,"message":"130","line":44,"column":11,"nodeType":"115","endLine":44,"endColumn":23},{"ruleId":"129","severity":1,"message":"130","line":53,"column":11,"nodeType":"115","endLine":53,"endColumn":23},"no-unused-vars","'Acc' is defined but never used.","Identifier","unusedVar","'Main' is defined but never used.","'ZeroWidthStack' is defined but never used.","'Codenotes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'global.values'. Either exclude it or remove the dependency array. Outer scope values like 'global.values' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["131"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Tab' is defined but never used.","'Tabs' is defined but never used.","'useState' is defined but never used.","'PropTypes' is defined but never used.","'Sectionnotes' is defined but never used.","'Chapternotes' is defined but never used.","'first' is assigned a value but never used.","'setFirst' is assigned a value but never used.",["132"],["133"],"React Hook useEffect has an unnecessary dependency: 'global.values.code'. Either exclude it or remove the dependency array. Outer scope values like 'global.values.code' aren't valid dependencies because mutating them doesn't re-render the component.",["134"],"'Typography' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"desc":"135","fix":"136"},{"desc":"135","fix":"137"},{"desc":"135","fix":"138"},{"desc":"135","fix":"139"},"Update the dependencies array to be: []",{"range":"140","text":"141"},{"range":"142","text":"141"},{"range":"143","text":"141"},{"range":"144","text":"141"},[676,691],"[]",[830,845],[677,692],[604,625]]