{"ast":null,"code":"var _jsxFileName = \"D:\\\\newclarits1\\\\src\\\\components\\\\Chapternotes.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../styles/Chapter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chapternotes = () => {\n  _s();\n  var _global$values2;\n  const [results, setResults] = useState(null);\n  useEffect(() => {\n    const fetchBooks = async () => {\n      try {\n        var _global$values;\n        const response = await fetch(`/codes/${(_global$values = global.values) === null || _global$values === void 0 ? void 0 : _global$values.code}/details`);\n        if (response.ok) {\n          const data = await response.json();\n          setResults(data);\n        } else {\n          console.error(\"Failed to fetch data\");\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n    fetchBooks();\n  }, [(_global$values2 = global.values) === null || _global$values2 === void 0 ? void 0 : _global$values2.code]);\n  console.log(\"our result is\", results);\n  const shouldDisplayClassification = (classification, index) => {\n    var _results$chapter;\n    if (index === 0) {\n      return true; // Always display the first classification\n    }\n\n    const previousClassifications = results === null || results === void 0 ? void 0 : (_results$chapter = results.chapter) === null || _results$chapter === void 0 ? void 0 : _results$chapter.notes.slice(0, index).map(note => note.classification);\n    return !(previousClassifications !== null && previousClassifications !== void 0 && previousClassifications.includes(classification));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"50px\"\n      },\n      children: [results && results.chapter && results.chapter.description && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"17px\"\n          },\n          children: results.chapter.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, results.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), results && results.chapter && !results.chapter.notes ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No notes available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : results.chapter.notes.sort((a, b) => a.classification.localeCompare(b.classification)).map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [shouldDisplayClassification(note.classification, index) && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"10px 20px 20px 20px\"\n          },\n          className: \"classification-note\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: note.classification.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), \":\", \" \", note.notes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }, this), !shouldDisplayClassification(note.classification, index) && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"110px\"\n          },\n          className: \"classification-note\",\n          children: note.notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Chapternotes, \"N7B/+eHsLT/dzJhUTI5eoU5ZVqM=\");\n_c = Chapternotes;\nexport default Chapternotes;\nvar _c;\n$RefreshReg$(_c, \"Chapternotes\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Chapternotes","_s","_global$values2","results","setResults","fetchBooks","_global$values","response","fetch","global","values","code","ok","data","json","console","error","log","shouldDisplayClassification","classification","index","_results$chapter","previousClassifications","chapter","notes","slice","map","note","includes","children","style","marginTop","description","marginLeft","fileName","_jsxFileName","lineNumber","columnNumber","sort","a","b","localeCompare","padding","className","toUpperCase","_c","$RefreshReg$"],"sources":["D:/newclarits1/src/components/Chapternotes.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/Chapter.css\";\r\n\r\nconst Chapternotes = () => {\r\n  const [results, setResults] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchBooks = async () => {\r\n      try {\r\n        const response = await fetch(`/codes/${global.values?.code}/details`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setResults(data);\r\n        } else {\r\n          console.error(\"Failed to fetch data\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    };\r\n    fetchBooks();\r\n  }, [global.values?.code]);\r\n\r\n  console.log(\"our result is\", results);\r\n\r\n  const shouldDisplayClassification = (classification, index) => {\r\n    if (index === 0) {\r\n      return true; // Always display the first classification\r\n    }\r\n    const previousClassifications = results?.chapter?.notes\r\n      .slice(0, index)\r\n      .map((note) => note.classification);\r\n    return !previousClassifications?.includes(classification);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginTop: \"50px\" }}>\r\n        {results && results.chapter && results.chapter.description && (\r\n          <div key={results.code}>\r\n            <div style={{ marginLeft: \"17px\" }}>\r\n              {results.chapter.description}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {results && results.chapter && !results.chapter.notes ? (\r\n          <div>No notes available.</div>\r\n        ) : (\r\n          results.chapter.notes\r\n            .sort((a, b) => a.classification.localeCompare(b.classification))\r\n            .map((note, index) => (\r\n              <div key={index}>\r\n                {shouldDisplayClassification(note.classification, index) && (\r\n                  <div\r\n                    style={{ padding: \"10px 20px 20px 20px\" }}\r\n                    className=\"classification-note\"\r\n                  >\r\n                    <strong>{note.classification.toUpperCase()}</strong>:{\" \"}\r\n                    {note.notes}\r\n                  </div>\r\n                )}\r\n                {!shouldDisplayClassification(note.classification, index) && (\r\n                  <div\r\n                    style={{ marginLeft: \"110px\" }}\r\n                    className=\"classification-note\"\r\n                  >\r\n                    {note.notes}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chapternotes;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}